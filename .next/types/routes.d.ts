// This file is generated automatically by Next.js
// Do not edit this file manually

type AppRoutes = "/" | "/about" | "/account" | "/account/orders" | "/account/orders/[id]" | "/account/settings" | "/admin" | "/admin/analytics" | "/admin/audit-logs" | "/admin/categories" | "/admin/communications" | "/admin/emails" | "/admin/emails/[id]" | "/admin/emails/new" | "/admin/events" | "/admin/financials" | "/admin/fundraisers" | "/admin/invoices" | "/admin/invoices/[id]" | "/admin/media" | "/admin/messages" | "/admin/messages/[id]" | "/admin/orders" | "/admin/orders/[id]" | "/admin/products" | "/admin/products/[id]/edit" | "/admin/products/new" | "/admin/recipes" | "/admin/recipes/[id]/edit" | "/admin/recipes/new" | "/admin/reviews" | "/admin/seo" | "/admin/settings" | "/admin/settings/integrations" | "/admin/social" | "/admin/tags" | "/admin/tags/[id]/edit" | "/admin/tags/new" | "/admin/users" | "/admin/users/[id]/edit" | "/admin/users/new" | "/admin/wholesale" | "/auth/forgot-password" | "/auth/reset-password" | "/auth/signin" | "/auth/signup" | "/checkout" | "/checkout/success" | "/find-us" | "/fundraising" | "/our-story" | "/products" | "/recipes" | "/recipes/[slug]" | "/salsas" | "/salsas/[slug]" | "/where-is-jose" | "/wholesale"
type AppRouteHandlerRoutes = "/admin/products/export" | "/api/admin/categories" | "/api/admin/categories/[id]" | "/api/admin/media" | "/api/admin/media/[id]" | "/api/admin/orders" | "/api/admin/orders/export" | "/api/admin/products" | "/api/admin/products/[id]" | "/api/admin/products/export" | "/api/admin/recipes" | "/api/admin/recipes/[id]" | "/api/admin/tags" | "/api/admin/tags/[id]" | "/api/admin/users" | "/api/admin/users/[id]" | "/api/auth/[...nextauth]" | "/api/auth/forgot-password" | "/api/auth/register" | "/api/auth/reset-password" | "/api/auth/verify-reset-token" | "/api/calendar" | "/api/checkout" | "/api/checkout/complete" | "/api/products" | "/api/products/featured" | "/api/recipes" | "/auth/[...nextauth]" | "/messages" | "/messages/[id]" | "/messages/start" | "/my/messages" | "/my/messages/[id]"
type PageRoutes = never
type LayoutRoutes = "/" | "/account" | "/admin"
type RedirectRoutes = never
type RewriteRoutes = never
type Routes = AppRoutes | PageRoutes | LayoutRoutes | RedirectRoutes | RewriteRoutes | AppRouteHandlerRoutes


interface ParamMap {
  "/": {}
  "/about": {}
  "/account": {}
  "/account/orders": {}
  "/account/orders/[id]": { "id": string; }
  "/account/settings": {}
  "/admin": {}
  "/admin/analytics": {}
  "/admin/audit-logs": {}
  "/admin/categories": {}
  "/admin/communications": {}
  "/admin/emails": {}
  "/admin/emails/[id]": { "id": string; }
  "/admin/emails/new": {}
  "/admin/events": {}
  "/admin/financials": {}
  "/admin/fundraisers": {}
  "/admin/invoices": {}
  "/admin/invoices/[id]": { "id": string; }
  "/admin/media": {}
  "/admin/messages": {}
  "/admin/messages/[id]": { "id": string; }
  "/admin/orders": {}
  "/admin/orders/[id]": { "id": string; }
  "/admin/products": {}
  "/admin/products/[id]/edit": { "id": string; }
  "/admin/products/export": {}
  "/admin/products/new": {}
  "/admin/recipes": {}
  "/admin/recipes/[id]/edit": { "id": string; }
  "/admin/recipes/new": {}
  "/admin/reviews": {}
  "/admin/seo": {}
  "/admin/settings": {}
  "/admin/settings/integrations": {}
  "/admin/social": {}
  "/admin/tags": {}
  "/admin/tags/[id]/edit": { "id": string; }
  "/admin/tags/new": {}
  "/admin/users": {}
  "/admin/users/[id]/edit": { "id": string; }
  "/admin/users/new": {}
  "/admin/wholesale": {}
  "/api/admin/categories": {}
  "/api/admin/categories/[id]": { "id": string; }
  "/api/admin/media": {}
  "/api/admin/media/[id]": { "id": string; }
  "/api/admin/orders": {}
  "/api/admin/orders/export": {}
  "/api/admin/products": {}
  "/api/admin/products/[id]": { "id": string; }
  "/api/admin/products/export": {}
  "/api/admin/recipes": {}
  "/api/admin/recipes/[id]": { "id": string; }
  "/api/admin/tags": {}
  "/api/admin/tags/[id]": { "id": string; }
  "/api/admin/users": {}
  "/api/admin/users/[id]": { "id": string; }
  "/api/auth/[...nextauth]": { "nextauth": string[]; }
  "/api/auth/forgot-password": {}
  "/api/auth/register": {}
  "/api/auth/reset-password": {}
  "/api/auth/verify-reset-token": {}
  "/api/calendar": {}
  "/api/checkout": {}
  "/api/checkout/complete": {}
  "/api/products": {}
  "/api/products/featured": {}
  "/api/recipes": {}
  "/auth/[...nextauth]": { "nextauth": string[]; }
  "/auth/forgot-password": {}
  "/auth/reset-password": {}
  "/auth/signin": {}
  "/auth/signup": {}
  "/checkout": {}
  "/checkout/success": {}
  "/find-us": {}
  "/fundraising": {}
  "/messages": {}
  "/messages/[id]": { "id": string; }
  "/messages/start": {}
  "/my/messages": {}
  "/my/messages/[id]": { "id": string; }
  "/our-story": {}
  "/products": {}
  "/recipes": {}
  "/recipes/[slug]": { "slug": string; }
  "/salsas": {}
  "/salsas/[slug]": { "slug": string; }
  "/where-is-jose": {}
  "/wholesale": {}
}


export type ParamsOf<Route extends Routes> = ParamMap[Route]

interface LayoutSlotMap {
  "/": never
  "/account": never
  "/admin": never
}


export type { AppRoutes, PageRoutes, LayoutRoutes, RedirectRoutes, RewriteRoutes, ParamMap, AppRouteHandlerRoutes }

declare global {
  /**
   * Props for Next.js App Router page components
   * @example
   * ```tsx
   * export default function Page(props: PageProps<'/blog/[slug]'>) {
   *   const { slug } = await props.params
   *   return <div>Blog post: {slug}</div>
   * }
   * ```
   */
  interface PageProps<AppRoute extends AppRoutes> {
    params: Promise<ParamMap[AppRoute]>
    searchParams: Promise<Record<string, string | string[] | undefined>>
  }

  /**
   * Props for Next.js App Router layout components
   * @example
   * ```tsx
   * export default function Layout(props: LayoutProps<'/dashboard'>) {
   *   return <div>{props.children}</div>
   * }
   * ```
   */
  type LayoutProps<LayoutRoute extends LayoutRoutes> = {
    params: Promise<ParamMap[LayoutRoute]>
    children: React.ReactNode
  } & {
    [K in LayoutSlotMap[LayoutRoute]]: React.ReactNode
  }

  /**
   * Context for Next.js App Router route handlers
   * @example
   * ```tsx
   * export async function GET(request: NextRequest, context: RouteContext<'/api/users/[id]'>) {
   *   const { id } = await context.params
   *   return Response.json({ id })
   * }
   * ```
   */
  interface RouteContext<AppRouteHandlerRoute extends AppRouteHandlerRoutes> {
    params: Promise<ParamMap[AppRouteHandlerRoute]>
  }
}
